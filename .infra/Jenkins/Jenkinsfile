pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh script: '''
                    echo "I am in build step"
                    chmod +x gradlew
                    ./gradlew build
                ''',
            label: "Building Project"
            }
        }
        stage('Test')
        {
            steps {
                sh script: '''
                    echo "I am in Test step"
                    chmod +x gradlew
                    ./gradlew test
                ''',
            label: "Running Unit Test Cases"
            }
        }
        stage('Static Code Analysis')
        {
            environment {
                scannerHome = tool 'SonarQubeScanner'
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
                timeout(time: 10, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true;
                }
                sh script: '''
                    echo "I am in Sonarqube scan"
                ''',
            label: "Running Sonarqube Scan"
            }
        }
        stage('Build DockerImage')
        {
            steps {
                sh script: '''
                    echo "I am building DockerImage"
                    docker build -t httpserver .
                ''',
            label: "Building Docker Image"
            }
        }
        stage('Publish DockerImage')
        {
            steps {
                sh script: '''
                    echo "I am publishing DockerImage"
                    docker login -u sushovankarmakar -p sushovan1234
                    docker tag httpserver sushovankarmakar/httpserver_1.0
                    docker push sushovankarmakar/httpserver_1.0
                ''',
            label: "Publishing Docker Image"
            }
        }
    }
    post{
       always{
          deleteDir()
       }
    }
}
